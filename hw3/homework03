leetcode 206 easy 

Given the head of a singly linked list, reverse the list, and return the reversed list.

Input: head = [1,2,3,4,5]. 1->2->3->4->5
Output: [5,4,3,2,1]. 5->4->3->2->1

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 class Solution {
      public ListNode reverseList(ListNode head) {
          if(head == null) return null;
          ListNode pre = null;
          ListNode cur = head;
          ListNode temp = null;
          while(cur!=null){
              // save the next node
              temp = cur.next;
              cur.next = pre;
              pre = cur;
              cur = temp;
              
          }
          return pre;
      }
  }


83
Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.

Input: head = [1,1,2]
Output: [1,2]

class Solution {
      public ListNode deleteDuplicates(ListNode head) {
          if(head == null) return null;
          ListNode pre = head;
          while( pre.next !=null){
              if(pre.val == pre.next.val){
                  pre.next = pre.next.next;
              }else{
                  pre = pre.next;
              }
          }
          return head;
      }
  }
