leetcode 206 easy 

Given the head of a singly linked list, reverse the list, and return the reversed list.

Input: head = [1,2,3,4,5]. 1->2->3->4->5
Output: [5,4,3,2,1]. 5->4->3->2->1

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null) return null;
        ListNode prev = null, curr = head;
        while(curr != null){
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }
}

83
Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.

Input: head = [1,1,2]
Output: [1,2]

class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode newHead = new ListNode(-101);
        newHead.next = head;
        ListNode prev = newHead;
        ListNode curr = prev.next;
        while(curr != null){
            if(curr.val == prev.val){
                // duplicates
                curr = curr.next;
            }else{
                prev.next = curr;
                prev = curr;
                curr = curr.next;
            }
        }
        prev.next = curr;
        return newHead.next;
    }
}
