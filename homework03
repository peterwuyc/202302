leetcode 206 easy 

Given the head of a singly linked list, reverse the list, and return the reversed list.

Input: head = [1,2,3,4,5]. 1->2->3->4->5
Output: [5,4,3,2,1]. 5->4->3->2->1

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 class Solution {
  public ListNode reverseList(ListNode head) {
      ListNode rest = null;
      while (head != null) {
          ListNode tmp = head.next;
          head.next = rest;
          rest = head;
          head = tmp;
      }
      return rest;

  }
}


83
Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.

Input: head = [1,1,2]
Output: [1,2]

class Solution {
  public ListNode deleteDuplicates(ListNode head) {
      if (head == null) {
          return head;
      }
      ListNode node = head;
      ListNode nodenext = head.next;
      while (node != null) {
          if (nodenext != null && node.val == nodenext.val){
              nodenext = nodenext.next;
          } else {
              node.next = nodenext;
              node = node.next;
              if (nodenext != null) {
                  nodenext = nodenext.next;
              }
          }
      }
      return head;
  }
}